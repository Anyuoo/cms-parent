//先执行构建脚本
buildscript {
    //引入gradle依赖配置文件
    apply from: "config.gradle"
    ext {
        springBootVersion = '2.3.2.RELEASE'
        springCloudVersion = 'Hoxton.SR8'
        springCloudAlibabaVersion = '2.2.3.RELEASE'
    }
    repositories {
        mavenLocal()
        maven { url 'http://maven.aliyun.com/nexus/content/groups/public/' }
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}
//所有项目配置
allprojects {
    group 'com.anyu'
    version '1.0.0'
    apply plugin: 'java'
    apply plugin: 'idea'
    // 指定JDK版本
    sourceCompatibility = 11
    targetCompatibility = 11
    //指定编码格式
    tasks.withType(JavaCompile) {
        options.encoding = "UTF-8"
    }

    repositories {
        mavenLocal()
        maven { url 'http://maven.aliyun.com/nexus/content/groups/public/' }
        mavenCentral()
    }
}

//子项目配置
subprojects {
    //dependency-management 插件
    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'org.springframework.boot'  //使用springboot插件

    // java编译的时候缺省状态下会因为中文字符而失败
    [compileJava, compileTestJava, javadoc]*.options*.encoding = 'UTF-8'
    dependencyManagement {
        imports {
            //spring bom helps us to declare dependencies without specifying version numbers.
            mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
            mavenBom "org.springframework.boot:spring-boot-dependencies:${springBootVersion}"
            mavenBom "com.alibaba.cloud:spring-cloud-alibaba-dependencies:${springCloudAlibabaVersion}"
        }
    }
    //所有子模块共有依赖
    dependencies {
        //依赖
        def deps = rootProject.ext.dependencies
        implementation fileTree(dir: 'libs', include: ['*.jar'])
        implementation 'org.springframework.boot:spring-boot-starter-validation'
        implementation 'org.springframework.boot:spring-boot-starter-actuator'
        annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"
        compile 'io.github.yedaxia:japidocs:1.4.3'//doc 文档生成
        compile deps.knife4j
        compileOnly deps.lombok
        annotationProcessor deps.lombok
        testImplementation('org.springframework.boot:spring-boot-starter-test') {
            exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
        }
    }
    jar {
        manifest.attributes provider: 'gradle'
    }
}


